@prefix :            <https://biomedit.ch/rdf/sphn-ontology/psss#> .
@prefix constraints: <https://biomedit.ch/rdf/sphn-ontology-constraints/sphn#> .
@prefix ns1:         <http://purl.org/dc/terms/> .
@prefix ns2:         <http://www.w3.org/2002/07/owl#> .
@prefix rdf:         <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:        <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh:          <http://www.w3.org/ns/shacl#> .
@prefix sphn:        <https://biomedit.ch/rdf/sphn-ontology/sphn#> .
@prefix xsd:         <http://www.w3.org/2001/XMLSchema#> .
@prefix ucum:        <https://biomedit.ch/rdf/sphn-resource/ucum/> .
@prefix loinc:       <https://biomedit.ch/rdf/sphn-resource/loinc/> .
@prefix snomed:      <http://snomed.info/id/> .
@prefix icd-10-gm:   <https://biomedit.ch/rdf/sphn-resource/icd-10-gm/> .

constraints:
    a              ns2:Ontology ;
    ns1:created    "2021-09-27"^^xsd:date ;
    ns1:license    <https://creativecommons.org/licenses/by-nc-sa/4.0/> ;
    rdfs:comment   "Generated by the the SHACLer tool, that is developed by the SPHN DCC (PHI, SIB Swiss Institute of Bioinformatics)."^^xsd:string ;
    ns2:versionIRI <https://biomedit.ch/rdf/sphn-ontology/psss/2021/1> ;
    sh:entailment  <http://www.w3.org/ns/entailment/RDFS> .

constraints:BloodPressure
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasBloodPressureUnit ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:class snomed:716777001 ;
                           sh:path  :hasBloodPressureMethod ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasBloodPressureDiastolicPressure ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasBloodPressureMeanPressure ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasBloodPressureDateTime ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasBloodPressureSystolicPressure ],#
                         [ sh:class snomed:59820001 ;
                           sh:path  :hasBloodPressureBodySite ],#
                         [ sh:class sphn:BodySite ;
                           sh:path  :hasBodySite ] ;
    sh:targetClass       :BloodPressure .

constraints:BodyPosition
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:9851009 ] ) ;
                           sh:path :hasBodyPositionCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ] ;
    sh:targetClass       :BodyPosition .

constraints:CardiacIndex
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasCardiacIndexDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasCardiacIndexValue ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasCardiacIndexUnit ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class snomed:63075001 ;
                           sh:path  :hasCardiacIndexMethod ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ] ;
    sh:targetClass       :CardiacIndex .

constraints:CardiacOutput
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:class snomed:63075001 ;
                           sh:path  :hasCardiacOutputMeasurementMethod ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasCardiacOutputUnit ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasCardiacOutputDateTime ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasCardiacOutputValue ] ;
    sh:targetClass       :CardiacOutput .

constraints:Dialysis
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:class snomed:108241001 ;
                           sh:path  :hasDialysisMethod ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ] ;
    sh:targetClass       :Dialysis .

constraints:ECMO
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:class snomed:233573008 ;
                           sh:path  :hasECMOMethod ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ] ;
    sh:targetClass       :ECMO .

constraints:EnergyIntake
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasEnergyIntakeUnit ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasEnergyIntakeValue ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ] ;
    sh:targetClass       :EnergyIntake .

constraints:FluidBalance
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class :FluidBalance_direction ;
                           sh:path  :hasFluidBalanceDirection ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:105590001 ] ) ;
                           sh:path :hasFluidBalanceSubstanceCode ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasFluidBalanceUnit ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasFluidBalanceValue ] ;
    sh:targetClass       :FluidBalance .

constraints:FluidBalanceTotal
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasFluidBalanceTotalValue ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class :FluidBalance_direction ;
                           sh:path  :hasFluidBalanceTotalDirection ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasFluidBalanceTotalUnit ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ] ;
    sh:targetClass       :FluidBalanceTotal .

constraints:FluidBalance_direction
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :output :balance :intake ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :FluidBalance_direction .

constraints:InfectionSuspected
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:dateTime ;
                           sh:path     :hasInfectionSuspectedDateTime ],#
                         [ sh:datatype xsd:string ;
                           sh:path     :hasInfectionSuspectedInformation ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class :InfectionSuspected_value ;
                           sh:path  :hasInfectionSuspectedValue ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ] ;
    sh:targetClass       :InfectionSuspected .

constraints:InfectionSuspected_value
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :yes :no ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :InfectionSuspected_value .

constraints:MechanicalVentilation
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:datatype xsd:string ;
                           sh:path     :hasMechanicalVentilationMode ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:or   ( [ sh:class snomed:55089006 ] [ sh:class sphn:Code ] [ sh:class snomed:243148004 ] [ sh:class snomed:243141005 ] ) ;
                           sh:path :hasMechanicalVentilationBreathSequenceCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:or   ( [ sh:class snomed:286812008 ] [ sh:class snomed:405609003 ] ) ;
                           sh:path :hasMechanicalVentilationControlVariableCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:datatype xsd:string ;
                           sh:path     :hasMechanicalVentilationDevice ],#
                         [ sh:class :MechanicalVentilation_targetingScheme ;
                           sh:path  :hasMechanicalVentilationTargetingScheme ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:Catheter ;
                           sh:path  :hasMechanicalVentilationIntubation ] ;
    sh:targetClass       :MechanicalVentilation .

constraints:MechanicalVentilation_targetingScheme
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :servo :set-point :intelligent :bio-variable :dual :adaptive :optimal ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :MechanicalVentilation_targetingScheme .

constraints:MetabolicIntake
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasMetabolicIntakeUnit ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:226355009 ] ) ;
                           sh:path :hasMetabolicIntakeSubstanceCode ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasMetabolicIntakeValue ] ;
    sh:targetClass       :MetabolicIntake .

constraints:MicrobiologyMicroscopyResult
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:362837007 ] ) ;
                           sh:path :hasMicrobiologyMicroscopyResultCellTypeCode ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class :MicrobiologyMicroscopyTest ;
                           sh:path  :hasMicrobiologyMicroscopyResultTest ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:class :MicrobiologyMicroscopyResult_stainingResult ;
                           sh:path  :hasMicrobiologyMicroscopyResultStainingResult ],#
                         [ sh:class :MicrobiologyMicroscopyResult_morphology ;
                           sh:path  :hasMicrobiologyMicroscopyResultMorphology ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasReportDateTime ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class :MicrobiologyMicroscopyResult_quantity ;
                           sh:path  :hasMicrobiologyMicroscopyResultQuantity ] ;
    sh:targetClass       :MicrobiologyMicroscopyResult .

constraints:MicrobiologyMicroscopyResult_morphology
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :spirillum :spiral :bacillus :other :spirochete :vibrio :coccus :tetrad :streptococci :sarcina :staphylococci :diplococcus ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :MicrobiologyMicroscopyResult_morphology .

constraints:MicrobiologyMicroscopyResult_quantity
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :none :numerous :few :massive ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :MicrobiologyMicroscopyResult_quantity .

constraints:MicrobiologyMicroscopyResult_stainingResult
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :negative :undetermined :positive ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :MicrobiologyMicroscopyResult_stainingResult .

constraints:MicrobiologyMicroscopyTest
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:37926009 ] ) ;
                           sh:path :hasMicrobiologyMicroscopyTestStainingMethod ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasMicrobiologyMicroscopyTestDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:class sphn:Biosample ;
                           sh:path  :hasBiosample ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ] ;
    sh:targetClass       :MicrobiologyMicroscopyTest .

constraints:MicrobiologyResistanceResult
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class :MicrobiologyResistanceTest ;
                           sh:path  :hasMicrobiologyResistanceTest ],#
                         [ sh:datatype xsd:string ;
                           sh:path     :hasMicrobiologyResistanceResultValue ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasMicrobiologyResistanceResultUnit ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class :MicrobiologyResistanceResult_sir ;
                           sh:path  :hasMicrobiologyResistanceResultSir ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasReportDateTime ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:Code ;
                           sh:path  :hasMicrobiologyResistanceResultMethod ] ;
    sh:targetClass       :MicrobiologyResistanceResult .

constraints:MicrobiologyResistanceResult_sir
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :R :S :I ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :MicrobiologyResistanceResult_sir .

constraints:MicrobiologyResistanceTest
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:or   ( [ sh:class snomed:19851009 ] [ sh:class sphn:Code ] ) ;
                           sh:path :hasMicrobiologyResistanceTestMethod ],#
                         [ sh:class :MicroorganismIdentificationResult ;
                           sh:path  :hasMicroorganismIdentificationResult ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasMicrobiologyResistanceTestDateTime ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class sphn:Drug ;
                           sh:path  :hasMicrobiologyResistanceTestDrug ] ;
    sh:targetClass       :MicrobiologyResistanceTest .

constraints:MicroorganismIdentificationResult
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:string ;
                           sh:path     :hasMicroorganismIdentificationResultNormalRange ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasMicroorganismIdentificationResultUnit ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasReportDateTime ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasMicroorganismIdentificationResultAnalysisDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:410607006 ] [ sh:class loinc:LOINC ] ) ;
                           sh:path :hasMicroorganismCode ],#
                         [ sh:datatype xsd:string ;
                           sh:path     :hasMicroorganismIdentificationResultQuantity ],#
                         [ sh:class :MicroorganismIdentificationTest ;
                           sh:path  :hasMicroorganismIdentificationTest ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:string ;
                           sh:path     :hasMicroorganismIdentificationResultComment ],#
                         [ sh:class :MicroorganismIdentificationResult_value ;
                           sh:path  :hasMicroorganismIdentificationResultValue ] ;
    sh:targetClass       :MicroorganismIdentificationResult .

constraints:MicroorganismIdentificationResult_value
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :negative :undetermined :positive ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :MicroorganismIdentificationResult_value .

constraints:MicroorganismIdentificationTest
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:Biosample ;
                           sh:path  :hasBiosample ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasMicroorganismIdentificationTestDateTime ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:4804005 ] ) ;
                           sh:path :hasMicroorganismIdentificationTestMethod ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ] ;
    sh:targetClass       :MicroorganismIdentificationTest .

constraints:OxygenAAGradient
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:double ;
                           sh:path     :hasOxygenAAGradientValue ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasOxygenAAGradientDateTime ],#
                         [ sh:class snomed:63075001 ;
                           sh:path  :hasOxygenAAGradientMethod ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasOxygenAAGradientUnit ] ;
    sh:targetClass       :OxygenAAGradient .

constraints:OxygenationIndex
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasOxygenationIndexValue ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasOxygenationIndexDateTime ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasOxygenationIndexUnit ],#
                         [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class snomed:63075001 ;
                           sh:path  :hasOxygenationIndexMethod ],#
                         [ sh:or   ( [ sh:datatype xsd:double ;
                                       sh:path     :hasValue ] [ sh:datatype xsd:string ;
                                                                 sh:path     :hasValue ] ) ;
                           sh:path :hasValue ] ;
    sh:targetClass       :OxygenationIndex .

constraints:ProblemCondition_reportingIntent
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :MDSI ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :ProblemCondition_reportingIntent .

constraints:UrineOutput
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:Unit ;
                           sh:path  :hasUrineOutputUnit ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasEndDateTime ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasStartDateTime ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasUrineOutputValue ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ] ;
    sh:targetClass       :UrineOutput .

constraints:VentilationCycling
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:class :MechanicalVentilation ;
                           sh:path  :hasMechanicalVentilation ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasVentilationCyclingValue ],#
                         [ sh:or   ( [ sh:class snomed:414135002 ] [ sh:class snomed:87982008 ] [ sh:class snomed:263760002 ] [ sh:class snomed:261665006 ] [ sh:class snomed:258090004 ]
                                     [ sh:class snomed:258104002 ] ) ;
                           sh:path :hasDataDeterminationMethodCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:250818005 ] ) ;
                           sh:path :hasVentilationCyclingParameterCode ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasVentilationCyclingDateTime ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasVentilationCyclingUnit ] ;
    sh:targetClass       :VentilationCycling .

constraints:VentilationFlow
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:datatype xsd:double ;
                                       sh:path     :hasValue ] [ sh:datatype xsd:string ;
                                                                 sh:path     :hasValue ] ) ;
                           sh:path :hasValue ],#
                         [ sh:or   ( [ sh:class snomed:414135002 ] [ sh:class snomed:87982008 ] [ sh:class snomed:263760002 ] [ sh:class snomed:261665006 ] [ sh:class snomed:258090004 ]
                                     [ sh:class snomed:258104002 ] ) ;
                           sh:path :hasDataDeterminationMethodCode ],#
                         [ sh:class :MechanicalVentilation ;
                           sh:path  :hasMechanicalVentilation ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasVentilationFlowValue ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasVentilationFlowUnit ],#
                         [ sh:or   ( [ sh:class snomed:251941008 ] [ sh:class snomed:250811004 ] ) ;
                           sh:path :hasVentilationFlowParameterCode ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasVentilationFlowDateTime ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ] ;
    sh:targetClass       :VentilationFlow .

constraints:VentilationPressure
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasVentilationPressureUnit ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:class :MechanicalVentilation ;
                           sh:path  :hasMechanicalVentilation ],#
                         [ sh:or   ( [ sh:class snomed:251907000 ] [ sh:class :VentilationPressure_parameter ] [ sh:class snomed:250854009 ] [ sh:class sphn:Code ] ) ;
                           sh:path :hasVentilationPressureParameterCode ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasVentilationVolumeDateTime ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasVentilationPressureDateTime ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:or   ( [ sh:class snomed:414135002 ] [ sh:class snomed:87982008 ] [ sh:class snomed:263760002 ] [ sh:class snomed:261665006 ] [ sh:class snomed:258090004 ]
                                     [ sh:class snomed:258104002 ] ) ;
                           sh:path :hasDataDeterminationMethodCode ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasVentilationPressureValue ] ;
    sh:targetClass       :VentilationPressure .

constraints:VentilationPressure_parameter
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:in   ( :peepTotal :peepIntrinsic ) ;
                           sh:path [ sh:inversePath rdf:type ] ] ;
    sh:targetClass       :VentilationPressure_parameter .

constraints:VentilationRespiratoryMechanics
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:double ;
                           sh:path     :hasVentilationRespiratoryMechanicsValue ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasVentilationRespiratoryMechanicsUnit ],#
                         [ sh:or   ( [ sh:class snomed:6304003 ] [ sh:class sphn:Code ] [ sh:class snomed:3863008 ] ) ;
                           sh:path :hasVentilationRespiratoryMechanicsParameterCode ],#
                         [ sh:class :MechanicalVentilation ;
                           sh:path  :hasMechanicalVentilation ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasVentilationRespiratoryMechanicsDateTime ] ;
    sh:targetClass       :VentilationRespiratoryMechanics .

constraints:VentilationVolume
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class snomed:13621006 ] [ sh:class sphn:Code ] ) ;
                           sh:path :hasVentilationVolumeParameterCode ],#
                         [ sh:or   ( [ sh:class snomed:414135002 ] [ sh:class snomed:87982008 ] [ sh:class snomed:263760002 ] [ sh:class snomed:261665006 ] [ sh:class snomed:258090004 ]
                                     [ sh:class snomed:258104002 ] ) ;
                           sh:path :hasDataDeterminationMethodCode ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasVentilationVolumeValue ],#
                         [ sh:or   ( [ sh:datatype xsd:double ] [ sh:datatype xsd:string ] ) ;
                           sh:path :hasValue ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ],#
                         [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:Unit ;
                           sh:path  :hasVentilationVolumeUnit ],#
                         [ sh:class :MechanicalVentilation ;
                           sh:path  :hasMechanicalVentilation ],#
                         [ sh:class sphn:SubjectPseudoIdentifier ;
                           sh:path  :hasSubjectPseudoIdentifier ] ;
    sh:targetClass       :VentilationVolume .

constraints:sphnAllergy
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:datatype xsd:dateTime ;
                           sh:path     :hasReportDateTime ] ;
    sh:targetClass       sphn:Allergy .

constraints:sphnBiosample
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:123038009 ] ) ;
                           sh:path :hasBiosampleMaterialCode ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ] ;
    sh:targetClass       sphn:Biosample .

constraints:sphnDataDetermination
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ] ;
    sh:targetClass       sphn:DataDetermination .

constraints:sphnDiagnosticRadiologicExamination
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass       sphn:DiagnosticRadiologicExamination .

constraints:sphnDuration
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass       sphn:Duration .

constraints:sphnFrequency
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass       sphn:Frequency .

constraints:sphnGestationalAgeAtBirth
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass       sphn:GestationalAgeAtBirth .

constraints:sphnHealthcareEncounter
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:DataProviderInstitute ;
                           sh:path  :hasDataProviderInstitute ],#
                         [ sh:class sphn:AdministrativeCase ;
                           sh:path  :hasAdministrativeCase ] ;
    sh:targetClass       sphn:HealthcareEncounter .

constraints:sphnInhaledOxygenConcentration
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class sphn:Unit ;
                           sh:path  :hasInhaledOxygenFlowUnit ],#
                         [ sh:datatype xsd:double ;
                           sh:path     :hasInhaledOxygenFlowValue ] ;
    sh:targetClass       sphn:InhaledOxygenConcentration .

constraints:sphnLabResult
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass       sphn:LabResult .

constraints:sphnOxygenSaturation
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class snomed:122869004 ;
                           sh:path  :hasMeasurementMethodCode ],#
                         [ sh:or   ( [ sh:class snomed:7569003 ] [ sh:class snomed:29707007 ] [ sh:class snomed:48800003 ] ) ;
                           sh:path :hasOxygenSaturationBodySite ],#
                         [ sh:class sphn:BodySite ;
                           sh:path  :hasBodySite ],#
                         [ sh:class snomed:252465000 ;
                           sh:path  :hasOxygenSaturationMethod ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ] ;
    sh:targetClass       sphn:OxygenSaturation .

constraints:sphnProblemCondition
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:or   ( [ sh:class sphn:Code ] [ sh:class snomed:106229004 ] ) ;
                           sh:path :hasProblemConditionTypeCode ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class :ProblemCondition_reportingIntent ] ) ;
                           sh:path :hasProblemConditionReportingIntent ],#
                         [ sh:datatype xsd:dateTime ;
                           sh:path     :hasReportDateTime ],#
                         [ sh:or   ( [ sh:class sphn:Code ] [ sh:class sphn:Terminology ] [ sh:class sphn:ValueSet ] ) ;
                           sh:path :hasCode ] ;
    sh:targetClass       sphn:ProblemCondition .

constraints:sphnRadiotherapyProcedure
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass       sphn:RadiotherapyProcedure .

constraints:sphnRespiratoryRate
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:property          [ sh:class :MechanicalVentilation ;
                           sh:path  :hasMechanicalVentilation ],#
                         [ sh:or   ( [ sh:class snomed:414135002 ] [ sh:class snomed:87982008 ] [ sh:class snomed:263760002 ] [ sh:class snomed:261665006 ] [ sh:class snomed:258090004 ] [ sh:class snomed:258104002 ] ) ;
                           sh:path :hasDataDeterminationMethodCode ] ;
    sh:targetClass       sphn:RespiratoryRate .

constraints:sphnSubstanceAmount
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass       sphn:SubstanceAmount .

constraints:sphnTumorSpecimen
    a                    sh:NodeShape ;
    sh:closed            false ;
    sh:ignoredProperties ( rdf:type ) ;
    sh:targetClass       sphn:TumorSpecimen .

